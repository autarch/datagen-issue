:: icu::datetime :: provider :: calendar :: DateSymbolsV1 { months : :: icu::datetime :: provider :: calendar :: months :: ContextsV1 { format : :: icu::datetime :: provider :: calendar :: months :: FormatWidthsV1 { abbreviated : :: icu::datetime :: provider :: calendar :: months :: SymbolsV1 :: SolarTwelve ([alloc :: borrow :: Cow :: Borrowed ("кӑр.") , alloc :: borrow :: Cow :: Borrowed ("нар.") , alloc :: borrow :: Cow :: Borrowed ("пуш") , alloc :: borrow :: Cow :: Borrowed ("ака") , alloc :: borrow :: Cow :: Borrowed ("ҫу") , alloc :: borrow :: Cow :: Borrowed ("ҫӗр.") , alloc :: borrow :: Cow :: Borrowed ("утӑ") , alloc :: borrow :: Cow :: Borrowed ("ҫур.") , alloc :: borrow :: Cow :: Borrowed ("авӑн") , alloc :: borrow :: Cow :: Borrowed ("юпа") , alloc :: borrow :: Cow :: Borrowed ("чӳк") , alloc :: borrow :: Cow :: Borrowed ("раш.") ,] ,) , narrow : :: icu::datetime :: provider :: calendar :: months :: SymbolsV1 :: SolarTwelve ([alloc :: borrow :: Cow :: Borrowed ("К") , alloc :: borrow :: Cow :: Borrowed ("Н") , alloc :: borrow :: Cow :: Borrowed ("П") , alloc :: borrow :: Cow :: Borrowed ("А") , alloc :: borrow :: Cow :: Borrowed ("Ҫ") , alloc :: borrow :: Cow :: Borrowed ("Ҫ") , alloc :: borrow :: Cow :: Borrowed ("У") , alloc :: borrow :: Cow :: Borrowed ("Ҫ") , alloc :: borrow :: Cow :: Borrowed ("А") , alloc :: borrow :: Cow :: Borrowed ("Ю") , alloc :: borrow :: Cow :: Borrowed ("Ч") , alloc :: borrow :: Cow :: Borrowed ("Р") ,] ,) , short : None , wide : :: icu::datetime :: provider :: calendar :: months :: SymbolsV1 :: SolarTwelve ([alloc :: borrow :: Cow :: Borrowed ("кӑрлач") , alloc :: borrow :: Cow :: Borrowed ("нарӑс") , alloc :: borrow :: Cow :: Borrowed ("пуш") , alloc :: borrow :: Cow :: Borrowed ("ака") , alloc :: borrow :: Cow :: Borrowed ("ҫу") , alloc :: borrow :: Cow :: Borrowed ("ҫӗртме") , alloc :: borrow :: Cow :: Borrowed ("утӑ") , alloc :: borrow :: Cow :: Borrowed ("ҫурла") , alloc :: borrow :: Cow :: Borrowed ("авӑн") , alloc :: borrow :: Cow :: Borrowed ("юпа") , alloc :: borrow :: Cow :: Borrowed ("чӳк") , alloc :: borrow :: Cow :: Borrowed ("раштав") ,] ,) , } , stand_alone : None , } , weekdays : :: icu::datetime :: provider :: calendar :: weekdays :: ContextsV1 { format : :: icu::datetime :: provider :: calendar :: weekdays :: FormatWidthsV1 { abbreviated : :: icu::datetime :: provider :: calendar :: weekdays :: SymbolsV1 ([alloc :: borrow :: Cow :: Borrowed ("выр.") , alloc :: borrow :: Cow :: Borrowed ("тун.") , alloc :: borrow :: Cow :: Borrowed ("ытл.") , alloc :: borrow :: Cow :: Borrowed ("юн.") , alloc :: borrow :: Cow :: Borrowed ("кӗҫ.") , alloc :: borrow :: Cow :: Borrowed ("эр.") , alloc :: borrow :: Cow :: Borrowed ("шӑм.") ,] ,) , narrow : :: icu::datetime :: provider :: calendar :: weekdays :: SymbolsV1 ([alloc :: borrow :: Cow :: Borrowed ("В") , alloc :: borrow :: Cow :: Borrowed ("Т") , alloc :: borrow :: Cow :: Borrowed ("Ы") , alloc :: borrow :: Cow :: Borrowed ("Ю") , alloc :: borrow :: Cow :: Borrowed ("К") , alloc :: borrow :: Cow :: Borrowed ("Э") , alloc :: borrow :: Cow :: Borrowed ("Ш") ,] ,) , short : Some (:: icu::datetime :: provider :: calendar :: weekdays :: SymbolsV1 ([alloc :: borrow :: Cow :: Borrowed ("выр.") , alloc :: borrow :: Cow :: Borrowed ("тун.") , alloc :: borrow :: Cow :: Borrowed ("ытл.") , alloc :: borrow :: Cow :: Borrowed ("юн.") , alloc :: borrow :: Cow :: Borrowed ("кӗҫ.") , alloc :: borrow :: Cow :: Borrowed ("эр.") , alloc :: borrow :: Cow :: Borrowed ("шӑм.") ,] ,)) , wide : :: icu::datetime :: provider :: calendar :: weekdays :: SymbolsV1 ([alloc :: borrow :: Cow :: Borrowed ("вырсарникун") , alloc :: borrow :: Cow :: Borrowed ("тунтикун") , alloc :: borrow :: Cow :: Borrowed ("ытларикун") , alloc :: borrow :: Cow :: Borrowed ("юнкун") , alloc :: borrow :: Cow :: Borrowed ("кӗҫнерникун") , alloc :: borrow :: Cow :: Borrowed ("эрнекун") , alloc :: borrow :: Cow :: Borrowed ("шӑматкун") ,] ,) , } , stand_alone : None , } , eras : :: icu::datetime :: provider :: calendar :: Eras { names : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x02\0\0\0\0\0\x03\0bcece") } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x02\0\0\0\0\0,\0\xD0\xA5\xD1\x80\xD0\xB8\xD1\x81\xD1\x82\xD0\xBE\xD1\x81 \xD2\xAB\xD1\x83\xD1\x80\xD0\xB0\xD0\xBB\xD0\xBD\xD3\x91 \xD0\xBA\xD1\x83\xD0\xBD\xD1\x87\xD1\x87\xD0\xB5\xD0\xBD\xD0\xA5\xD1\x80\xD0\xB8\xD1\x81\xD1\x82\xD0\xBE\xD1\x81 \xD2\xAB\xD1\x83\xD1\x80\xD0\xB0\xD0\xBB\xD0\xBD\xD3\x91 \xD0\xBA\xD1\x83\xD0\xBD\xD1\x80\xD0\xB0\xD0\xBD") }) } , abbr : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x02\0\0\0\0\0\x03\0bcece") } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x02\0\0\0\0\0\x07\0\xD0\xBF. \xD1\x8D.\xD1\x85. \xD1\x8D.") }) } , narrow : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x02\0\0\0\0\0\x03\0bcece") } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x02\0\0\0\0\0\x07\0\xD0\xBF. \xD1\x8D.\xD1\x85. \xD1\x8D.") }) } , } , }