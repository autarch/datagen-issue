:: icu::datetime :: provider :: calendar :: DateSymbolsV1 { months : :: icu::datetime :: provider :: calendar :: months :: ContextsV1 { format : :: icu::datetime :: provider :: calendar :: months :: FormatWidthsV1 { abbreviated : :: icu::datetime :: provider :: calendar :: months :: SymbolsV1 :: SolarTwelve ([alloc :: borrow :: Cow :: Borrowed ("𐓄𐓘𐓡𐓛\u{358}𐓧𐓟") , alloc :: borrow :: Cow :: Borrowed ("𐓵𐓪\u{358}𐓬𐓘") , alloc :: borrow :: Cow :: Borrowed ("𐓵𐓘𐓜𐓣") , alloc :: borrow :: Cow :: Borrowed ("𐓰𐓪𐓬𐓘") , alloc :: borrow :: Cow :: Borrowed ("𐓮𐓘𐓰𐓘") , alloc :: borrow :: Cow :: Borrowed ("𐓯𐓘𐓬𐓟") , alloc :: borrow :: Cow :: Borrowed ("𐓄𐓟𐓵𐓪\u{358}𐓬𐓘") , alloc :: borrow :: Cow :: Borrowed ("𐒼𐓣𐓟𐓰𐓪𐓬𐓘") , alloc :: borrow :: Cow :: Borrowed ("𐒿𐓟𐓜𐓛𐓲𐓟𐓷𐓣\u{358}𐓤𐓟") , alloc :: borrow :: Cow :: Borrowed ("𐒿𐓟𐓜𐓛") , alloc :: borrow :: Cow :: Borrowed ("𐒰𐓧𐓣 𐓏𐓣\u{358}𐓸𐓲𐓣") , alloc :: borrow :: Cow :: Borrowed ("𐒰𐓧𐓣 𐓍𐓪\u{358}𐓬𐓘") ,] ,) , narrow : :: icu::datetime :: provider :: calendar :: months :: SymbolsV1 :: SolarTwelve ([alloc :: borrow :: Cow :: Borrowed ("1") , alloc :: borrow :: Cow :: Borrowed ("2") , alloc :: borrow :: Cow :: Borrowed ("3") , alloc :: borrow :: Cow :: Borrowed ("4") , alloc :: borrow :: Cow :: Borrowed ("5") , alloc :: borrow :: Cow :: Borrowed ("6") , alloc :: borrow :: Cow :: Borrowed ("7") , alloc :: borrow :: Cow :: Borrowed ("8") , alloc :: borrow :: Cow :: Borrowed ("9") , alloc :: borrow :: Cow :: Borrowed ("10") , alloc :: borrow :: Cow :: Borrowed ("11") , alloc :: borrow :: Cow :: Borrowed ("12") ,] ,) , short : None , wide : :: icu::datetime :: provider :: calendar :: months :: SymbolsV1 :: SolarTwelve ([alloc :: borrow :: Cow :: Borrowed ("𐓀𐓣\u{358}𐓪\u{358}𐓬𐓘 𐓄𐓘𐓡𐓛\u{358}𐓧𐓟") , alloc :: borrow :: Cow :: Borrowed ("𐓀𐓣\u{358}𐓪\u{358}𐓬𐓘 𐓏𐓟𐓵𐓪\u{358}𐓬𐓘") , alloc :: borrow :: Cow :: Borrowed ("𐓀𐓣\u{358}𐓪\u{358}𐓬𐓘 𐓏𐓟𐓵𐓘𐓜𐓣") , alloc :: borrow :: Cow :: Borrowed ("𐓀𐓣\u{358}𐓪\u{358}𐓬𐓘 𐓏𐓟𐓰𐓪𐓬𐓘") , alloc :: borrow :: Cow :: Borrowed ("𐓀𐓣\u{358}𐓪\u{358}𐓬𐓘 𐓏𐓟𐓮𐓘𐓰𐓘") , alloc :: borrow :: Cow :: Borrowed ("𐓀𐓣\u{358}𐓪\u{358}𐓬𐓘 𐓏𐓟𐓯𐓘𐓬𐓟") , alloc :: borrow :: Cow :: Borrowed ("𐓀𐓣\u{358}𐓪\u{358}𐓬𐓘 𐓄𐓟𐓵𐓪\u{358}𐓬𐓘") , alloc :: borrow :: Cow :: Borrowed ("𐓀𐓣\u{358}𐓪\u{358}𐓬𐓘 𐒼𐓣𐓟𐓰𐓪𐓬𐓘") , alloc :: borrow :: Cow :: Borrowed ("𐓀𐓣\u{358}𐓪\u{358}𐓬𐓘 𐒿𐓟𐓜𐓛𐓲𐓟𐓷𐓣\u{358}𐓤𐓟") , alloc :: borrow :: Cow :: Borrowed ("𐓀𐓣\u{358}𐓪\u{358}𐓬𐓘 𐒿𐓟𐓜𐓛") , alloc :: borrow :: Cow :: Borrowed ("𐓀𐓣\u{358}𐓪\u{358}𐓬𐓘 𐒰𐓧𐓣 𐓏𐓣\u{358}𐓸𐓲𐓣") , alloc :: borrow :: Cow :: Borrowed ("𐓀𐓣\u{358}𐓪\u{358}𐓬𐓘 𐒰𐓧𐓣 𐓍𐓪\u{358}𐓬𐓘") ,] ,) , } , stand_alone : None , } , weekdays : :: icu::datetime :: provider :: calendar :: weekdays :: ContextsV1 { format : :: icu::datetime :: provider :: calendar :: weekdays :: FormatWidthsV1 { abbreviated : :: icu::datetime :: provider :: calendar :: weekdays :: SymbolsV1 ([alloc :: borrow :: Cow :: Borrowed ("𐒹𐓘\u{358}𐓬𐓘 𐓏𐓘𐓤𐓘\u{358}𐓰𐓘𐓤𐓣") , alloc :: borrow :: Cow :: Borrowed ("𐒹𐓘\u{358}𐓬𐓘 𐓄𐓘𐓡𐓛\u{358}𐓧𐓣") , alloc :: borrow :: Cow :: Borrowed ("𐒹𐓘\u{358}𐓬𐓘 𐓏𐓟𐓵𐓪\u{358}𐓬𐓘") , alloc :: borrow :: Cow :: Borrowed ("𐒹𐓘\u{358}𐓬𐓘 𐓏𐓟𐓵𐓘𐓜𐓣") , alloc :: borrow :: Cow :: Borrowed ("𐒹𐓘\u{358}𐓬𐓘 𐓏𐓟𐓰𐓪𐓬𐓘") , alloc :: borrow :: Cow :: Borrowed ("𐒹𐓘\u{358}𐓬𐓘 𐓈𐓘 𐓵𐓘𐓲𐓘 𐓻𐓣\u{358}") , alloc :: borrow :: Cow :: Borrowed ("𐒹𐓘\u{358}𐓬𐓘 𐓂𐓤𐓘𐓸𐓟 𐓣\u{358}𐓤𐓟") ,] ,) , narrow : :: icu::datetime :: provider :: calendar :: weekdays :: SymbolsV1 ([alloc :: borrow :: Cow :: Borrowed ("𐓏") , alloc :: borrow :: Cow :: Borrowed ("𐓄") , alloc :: borrow :: Cow :: Borrowed ("𐓍") , alloc :: borrow :: Cow :: Borrowed ("𐒴") , alloc :: borrow :: Cow :: Borrowed ("𐓈") , alloc :: borrow :: Cow :: Borrowed ("𐓊") , alloc :: borrow :: Cow :: Borrowed ("𐓸") ,] ,) , short : Some (:: icu::datetime :: provider :: calendar :: weekdays :: SymbolsV1 ([alloc :: borrow :: Cow :: Borrowed ("𐒹𐓘\u{358}𐓬𐓘 𐓏𐓘𐓤𐓘\u{358}𐓰𐓘𐓤𐓣") , alloc :: borrow :: Cow :: Borrowed ("𐒹𐓘\u{358}𐓬𐓘 𐓄𐓘𐓡𐓛\u{358}𐓧𐓣") , alloc :: borrow :: Cow :: Borrowed ("𐒹𐓘\u{358}𐓬𐓘 𐓏𐓟𐓵𐓪\u{358}𐓬𐓘") , alloc :: borrow :: Cow :: Borrowed ("𐒹𐓘\u{358}𐓬𐓘 𐓏𐓟𐓵𐓘𐓜𐓣") , alloc :: borrow :: Cow :: Borrowed ("𐒹𐓘\u{358}𐓬𐓘 𐓏𐓟𐓰𐓪𐓬𐓘") , alloc :: borrow :: Cow :: Borrowed ("𐒹𐓘\u{358}𐓬𐓘 𐓈𐓘 𐓵𐓘𐓲𐓘 𐓻𐓣\u{358}") , alloc :: borrow :: Cow :: Borrowed ("𐒹𐓘\u{358}𐓬𐓘 𐓂𐓤𐓘𐓸𐓟 𐓣\u{358}𐓤𐓟") ,] ,)) , wide : :: icu::datetime :: provider :: calendar :: weekdays :: SymbolsV1 ([alloc :: borrow :: Cow :: Borrowed ("𐒹𐓘\u{358}𐓬𐓘 𐓏𐓘𐓤𐓘\u{358}𐓰𐓘𐓤𐓣") , alloc :: borrow :: Cow :: Borrowed ("𐒹𐓘\u{358}𐓬𐓘 𐓄𐓘𐓡𐓛\u{358}𐓧𐓣") , alloc :: borrow :: Cow :: Borrowed ("𐒹𐓘\u{358}𐓬𐓘 𐓏𐓟𐓵𐓪\u{358}𐓬𐓘") , alloc :: borrow :: Cow :: Borrowed ("𐒹𐓘\u{358}𐓬𐓘 𐓏𐓟𐓵𐓘𐓜𐓣") , alloc :: borrow :: Cow :: Borrowed ("𐒹𐓘\u{358}𐓬𐓘 𐓏𐓟𐓰𐓪𐓬𐓘") , alloc :: borrow :: Cow :: Borrowed ("𐒹𐓘\u{358}𐓬𐓘 𐓈𐓘 𐓵𐓘𐓲𐓘 𐓻𐓣\u{358}") , alloc :: borrow :: Cow :: Borrowed ("𐒹𐓘\u{358}𐓬𐓘 𐓂𐓤𐓘𐓸𐓟 𐓣\u{358}𐓤𐓟") ,] ,) , } , stand_alone : Some (:: icu::datetime :: provider :: calendar :: weekdays :: StandAloneWidthsV1 { abbreviated : None , narrow : Some (:: icu::datetime :: provider :: calendar :: weekdays :: SymbolsV1 ([alloc :: borrow :: Cow :: Borrowed ("S") , alloc :: borrow :: Cow :: Borrowed ("M") , alloc :: borrow :: Cow :: Borrowed ("T") , alloc :: borrow :: Cow :: Borrowed ("W") , alloc :: borrow :: Cow :: Borrowed ("T") , alloc :: borrow :: Cow :: Borrowed ("F") , alloc :: borrow :: Cow :: Borrowed ("S") ,] ,)) , short : None , wide : None , }) , } , eras : :: icu::datetime :: provider :: calendar :: Eras { names : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x01\0\0\0\0\0be") } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x01\0\0\0\0\0BE") }) } , abbr : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x01\0\0\0\0\0be") } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x01\0\0\0\0\0BE") }) } , narrow : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x01\0\0\0\0\0be") } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x01\0\0\0\0\0BE") }) } , } , }