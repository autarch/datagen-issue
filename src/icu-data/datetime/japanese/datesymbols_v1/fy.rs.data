:: icu::datetime :: provider :: calendar :: DateSymbolsV1 { months : :: icu::datetime :: provider :: calendar :: months :: ContextsV1 { format : :: icu::datetime :: provider :: calendar :: months :: FormatWidthsV1 { abbreviated : :: icu::datetime :: provider :: calendar :: months :: SymbolsV1 :: SolarTwelve ([alloc :: borrow :: Cow :: Borrowed ("Jan") , alloc :: borrow :: Cow :: Borrowed ("Feb") , alloc :: borrow :: Cow :: Borrowed ("Mrt") , alloc :: borrow :: Cow :: Borrowed ("Apr") , alloc :: borrow :: Cow :: Borrowed ("Mai") , alloc :: borrow :: Cow :: Borrowed ("Jun") , alloc :: borrow :: Cow :: Borrowed ("Jul") , alloc :: borrow :: Cow :: Borrowed ("Aug") , alloc :: borrow :: Cow :: Borrowed ("Sep") , alloc :: borrow :: Cow :: Borrowed ("Okt") , alloc :: borrow :: Cow :: Borrowed ("Nov") , alloc :: borrow :: Cow :: Borrowed ("Des") ,] ,) , narrow : :: icu::datetime :: provider :: calendar :: months :: SymbolsV1 :: SolarTwelve ([alloc :: borrow :: Cow :: Borrowed ("J") , alloc :: borrow :: Cow :: Borrowed ("F") , alloc :: borrow :: Cow :: Borrowed ("M") , alloc :: borrow :: Cow :: Borrowed ("A") , alloc :: borrow :: Cow :: Borrowed ("M") , alloc :: borrow :: Cow :: Borrowed ("J") , alloc :: borrow :: Cow :: Borrowed ("J") , alloc :: borrow :: Cow :: Borrowed ("A") , alloc :: borrow :: Cow :: Borrowed ("S") , alloc :: borrow :: Cow :: Borrowed ("O") , alloc :: borrow :: Cow :: Borrowed ("N") , alloc :: borrow :: Cow :: Borrowed ("D") ,] ,) , short : None , wide : :: icu::datetime :: provider :: calendar :: months :: SymbolsV1 :: SolarTwelve ([alloc :: borrow :: Cow :: Borrowed ("Jannewaris") , alloc :: borrow :: Cow :: Borrowed ("Febrewaris") , alloc :: borrow :: Cow :: Borrowed ("Maart") , alloc :: borrow :: Cow :: Borrowed ("April") , alloc :: borrow :: Cow :: Borrowed ("Maaie") , alloc :: borrow :: Cow :: Borrowed ("Juny") , alloc :: borrow :: Cow :: Borrowed ("July") , alloc :: borrow :: Cow :: Borrowed ("Augustus") , alloc :: borrow :: Cow :: Borrowed ("Septimber") , alloc :: borrow :: Cow :: Borrowed ("Oktober") , alloc :: borrow :: Cow :: Borrowed ("Novimber") , alloc :: borrow :: Cow :: Borrowed ("Desimber") ,] ,) , } , stand_alone : None , } , weekdays : :: icu::datetime :: provider :: calendar :: weekdays :: ContextsV1 { format : :: icu::datetime :: provider :: calendar :: weekdays :: FormatWidthsV1 { abbreviated : :: icu::datetime :: provider :: calendar :: weekdays :: SymbolsV1 ([alloc :: borrow :: Cow :: Borrowed ("si") , alloc :: borrow :: Cow :: Borrowed ("mo") , alloc :: borrow :: Cow :: Borrowed ("ti") , alloc :: borrow :: Cow :: Borrowed ("wo") , alloc :: borrow :: Cow :: Borrowed ("to") , alloc :: borrow :: Cow :: Borrowed ("fr") , alloc :: borrow :: Cow :: Borrowed ("so") ,] ,) , narrow : :: icu::datetime :: provider :: calendar :: weekdays :: SymbolsV1 ([alloc :: borrow :: Cow :: Borrowed ("S") , alloc :: borrow :: Cow :: Borrowed ("M") , alloc :: borrow :: Cow :: Borrowed ("T") , alloc :: borrow :: Cow :: Borrowed ("W") , alloc :: borrow :: Cow :: Borrowed ("T") , alloc :: borrow :: Cow :: Borrowed ("F") , alloc :: borrow :: Cow :: Borrowed ("S") ,] ,) , short : Some (:: icu::datetime :: provider :: calendar :: weekdays :: SymbolsV1 ([alloc :: borrow :: Cow :: Borrowed ("si") , alloc :: borrow :: Cow :: Borrowed ("mo") , alloc :: borrow :: Cow :: Borrowed ("ti") , alloc :: borrow :: Cow :: Borrowed ("wo") , alloc :: borrow :: Cow :: Borrowed ("to") , alloc :: borrow :: Cow :: Borrowed ("fr") , alloc :: borrow :: Cow :: Borrowed ("so") ,] ,)) , wide : :: icu::datetime :: provider :: calendar :: weekdays :: SymbolsV1 ([alloc :: borrow :: Cow :: Borrowed ("snein") , alloc :: borrow :: Cow :: Borrowed ("moandei") , alloc :: borrow :: Cow :: Borrowed ("tiisdei") , alloc :: borrow :: Cow :: Borrowed ("woansdei") , alloc :: borrow :: Cow :: Borrowed ("tongersdei") , alloc :: borrow :: Cow :: Borrowed ("freed") , alloc :: borrow :: Cow :: Borrowed ("sneon") ,] ,) , } , stand_alone : None , } , eras : :: icu::datetime :: provider :: calendar :: Eras { names : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x07\0\0\0\0\0\x03\0\x05\0\x0B\0\x10\0\x15\0\x1A\0bceceheiseimeijireiwashowataisho") } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x07\0\0\0\0\0\x0C\0\x17\0\x1D\0\"\0'\0-\0Foar Kristusnei KristusHeiseiMeijiReiwaSh\xC5\x8DwaTaish\xC5\x8D") }) } , abbr : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x07\0\0\0\0\0\x03\0\x05\0\x0B\0\x10\0\x15\0\x1A\0bceceheiseimeijireiwashowataisho") } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x07\0\0\0\0\0\x05\0\n\0\x10\0\x15\0\x1A\0 \0f.Kr.n.Kr.HeiseiMeijiReiwaSh\xC5\x8DwaTaish\xC5\x8D") }) } , narrow : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x07\0\0\0\0\0\x03\0\x05\0\x0B\0\x10\0\x15\0\x1A\0bceceheiseimeijireiwashowataisho") } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x07\0\0\0\0\0\x04\0\x08\0\t\0\n\0\x0B\0\x0C\0f.K.n.K.HMRST") }) } , } , }